#!/usr/bin/env ruby
require "rubygems"

require "thor"
require "thor/group"
require 'thor/rake_compat'

module IB
  class ControllerGenerator < Thor::Group
    include Thor::Actions
    include Thor::RakeCompat

    argument :name, :type => :string, :desc => "Name of the controller"
    class_option :outlets, :type => :hash, :default => {}, :required => false, :desc => "IBOutlets of the controller"
    class_option :actions, :type => :array, :default => [], :required => false, :desc => "IBAtions of the controller"
    class_option :accessors, :type => :array, :default => [], :required => false, :desc => "Accessors of the controller"

    def self.source_root
      File.dirname(__FILE__)
    end

    def create_controller_file
      template('../template/controller.erb', "app/controllers/#{underscore(name)}_controller.rb")
    end

    # TODO Generate spec for the UI
    # def create_spec_file
    # end

    private
    def underscore(string)
      string.gsub(/::/, '/').
      gsub(/([A-Z]+)([A-Z][a-z])/,'\1_\2').
      gsub(/([a-z\d])([A-Z])/,'\1_\2').
      tr("-", "_").
      downcase
    end

    def camelize(string)
      return string if string !~ /_/ && string =~ /[A-Z]+.*/
      string.split('_').map{|e| e.capitalize }.join
    end
  end
end

IB::ControllerGenerator.start